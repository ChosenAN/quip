[
    {
        "model": "challenges.challenge",
        "pk": 5,
        "fields": {
            "description": "Create a function that, given a list 'numbers', returns the second element in that list.",
            "function_name": "access_index",
            "function_args": [
                "numbers"
            ],
            "cases": [
                [
                    [
                        [
                            1,
                            2,
                            3
                        ]
                    ],
                    2
                ],
                [
                    [
                        [
                            6,
                            2
                        ]
                    ],
                    2
                ],
                [
                    [
                        [
                            9,
                            9,
                            9,
                            9,
                            9,
                            0
                        ]
                    ],
                    9
                ],
                [
                    [
                        [
                            17.3,
                            "4"
                        ]
                    ],
                    "4"
                ]
            ],
            "difficulty": "Easy"
        }
    },
    {
        "model": "challenges.challenge",
        "pk": 6,
        "fields": {
            "description": "Create a function that, given a number 'x', returns the 'x'th element of the fibonacci sequence.",
            "function_name": "fib",
            "function_args": [
                "x"
            ],
            "cases": [
                [
                    [
                        0
                    ],
                    0
                ],
                [
                    [
                        2
                    ],
                    1
                ],
                [
                    [
                        6
                    ],
                    8
                ],
                [
                    [
                        7
                    ],
                    13
                ]
            ],
            "difficulty": "Easy"
        }
    },
    {
        "model": "challenges.challenge",
        "pk": 7,
        "fields": {
            "description": "Create a function named add_one that takes a single argument, x, and return that number plus one. e.g. 4 -> 5",
            "function_name": "add_one",
            "function_args": [
                "x"
            ],
            "cases": [
                [
                    [
                        1
                    ],
                    2
                ],
                [
                    [
                        8
                    ],
                    9
                ],
                [
                    [
                        36
                    ],
                    37
                ],
                [
                    [
                        67
                    ],
                    68
                ]
            ],
            "difficulty": "Easy"
        }
    },
    {
        "model": "challenges.challenge",
        "pk": 8,
        "fields": {
            "description": "Create a function named add_numbers that takes two arguments, 'a' and 'b', and returns their sum. e.g. 7, 8 -> 15",
            "function_name": "add_numbers",
            "function_args": [
                "a",
                "b"
            ],
            "cases": [
                [
                    [
                        2,
                        3
                    ],
                    5
                ],
                [
                    [
                        5,
                        5
                    ],
                    10
                ],
                [
                    [
                        0,
                        0
                    ],
                    0
                ],
                [
                    [
                        1,
                        3
                    ],
                    4
                ]
            ],
            "difficulty": "Easy"
        }
    },
    {
        "model": "challenges.challenge",
        "pk": 9,
        "fields": {
            "description": "Create a function that returns the ones place of the number it is given. E.g. 62 -> 2.",
            "function_name": "get_ones_place",
            "function_args": [
                "x"
            ],
            "cases": [
                [
                    [
                        87
                    ],
                    7
                ],
                [
                    [
                        92
                    ],
                    2
                ],
                [
                    [
                        36
                    ],
                    6
                ],
                [
                    [
                        7
                    ],
                    7
                ]
            ],
            "difficulty": "Easy"
        }
    },
    {
        "model": "challenges.challenge",
        "pk": 10,
        "fields": {
            "description": "Create a function that returns the tens place of the number it is given. E.g. 62 -> 6.",
            "function_name": "get_tens_place",
            "function_args": [
                "x"
            ],
            "cases": [
                [
                    [
                        87
                    ],
                    8
                ],
                [
                    [
                        92
                    ],
                    9
                ],
                [
                    [
                        36
                    ],
                    3
                ],
                [
                    [
                        7
                    ],
                    0
                ]
            ],
            "difficulty": "Easy"
        }
    }
]